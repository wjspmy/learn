/*************************************************************************
    > File Name: test2.cpp
    > Author: 潘梦园
    > brief:  
    > Created Time: 2018年12月01日 星期六 15时12分00秒
 ************************************************************************/

#include <iostream>

class A {

};
class B {
    B() {};
    ~B() {};
};

class C {
    C() {};
    virtual ~C() {};
};

int main() {
    std::cout << sizeof(A) << '\t' << sizeof(B) << '\t' << sizeof(C) << std::endl;
    return 0;
}
/*
class A 是一个空类型，它的实例不包含任何信息，本来求 sizeof 应该是 0。但当我们声明该类型的实例的时候，它必须在内存中占有一定的空间，否则无法使 用这些实例。至于占用多少内存，由编译器决定。Visual Studio 2008 中每个空类型的实例 占用一个 byte 的空间。

class B 在 class A 的基础上添加了构造函数和析构函数。由于构造函数和析构函数的调用与类型的实例无关（调用它们只需要知道函数地址即可），在它的实例中不需要增加任何信息。所以 sizeof(B)和 sizeof(A)一样，在 Visual Studio 2008 中都是 1。
class C 在 class B 的基础上把析构函数标注为虚拟函数。C++的编译器一旦发现一个类型 中有虚拟函数，就会为该类型生成虚函数表，并在该类型的每一个实例中添加一个指向虚函 数表的指针。在 32 位的机器上，一个指针占 4 个字节的空间，在64位的机器上，一个指针占8个字节的空间，因此 sizeof(C)是 8.

*/
